default 디렉토리 만들기
widgets -> 해당 페이지에 필요한 위젯들
view -> page 다트 파일
controller -> 상태 관리 다트 파일
model -> 서버 통신 및 데이터 형태를 정의하는 다트 파일, 통신 기능 구현 다트 파일 


import 먼저 작성

화면 위젯 3가지
1. 직계자식을 가질 수 없는 위젯(Text, Image 등등)
2. 직계자식을 하나만 가질 수 있는 위젯(materialApp, Scaffold, Safearea)
2. 직계자식을 여러개 가질 수 있는 위젯 (Colum, Row, ListView)

stateless위젯 - 화면 변경이 안됨
stateful위젯 - 상태에 따라 화면 변경 됨
------
stateless 위젯 + 상태 라이브러리 - 상태에 따라 화면변경
라이브러리 위젯(HookWidget) - 라이브러리가 시키는 방법에 따라 진행하면 화면 변경

플러터
-화면구성
- 상태 관리(지역, 전역)
-- 내부 동장 방식은 지금 안중요
-- 0. 일반 변수(상태가 아닌 변수)는
-- 바뀌더라도 화면이 변하지 않는다.
-- 1. 데이터가 변하면 화면이 방식을 기억한다.
-- 2. 데이터를 넣어 주는 방식을 기억한다.
-- 2-1. 상태주입(HookWidget, MultiProvider)
-- 2-2. 상태변경(만든 함수 controller.change())
-- 2-3. 상태관찰(controller.isChecked)

context.watch -> 상태를 계속 관찰 하겠다.
(데이터가 바뀌는 것을 관찰할 수 있다)
(관찰하기 때문에 데이터가 바뀌면 화면에 영향을 끼침)
(context.read + 관찰)

context.read -> 상태를 한번만 확인하겠다.
(상태가 바뀌어도 화면에 영향을 끼치지 못함)
(상태를 변화 시키는 함수는 사용가능)

- 기능
-- onTap 등 유저의 반응을 통해서 함수 실행

-페이지 내에서 화면 전환
-- 페이지에 종속된 위젯들을 조건에 맞게 출력
ex)default_first_item

- 페이지 이동
navigator


참고!!!
[10분 테코톡]그루밍의 상태관리와 반응형 프로그래밍